public static void mazemake(int maze[][],boolean vis[][],int i,int j,int previ,int prevj,int n) {
		if(i<0 || i>(n-1) || j<0 || j>(n-1) || vis[i][j]==true) {
			return;
		}
		vis[i][j]=true;
		if(i-previ==1) {
			maze[i][j]=maze[i][j]|1;
			maze[i-1][j]=maze[i-1][j]|4;
		}else if(i-previ==-1) {
			maze[i+1][j]=maze[i+1][j]|1;
			maze[i][j]=maze[i][j]|4;
		}else if(j-prevj==1){
			maze[i][j]=maze[i][j]|8;
			maze[i][j-1]=maze[i][j-1]|2;
		}else if(j-prevj==-1) {
			maze[i][j]=maze[i][j]|2;
			maze[i][j+1]=maze[i][j+1]|8;
		}
		Random rd = new Random();
		boolean a[]=new boolean[4];
		for(int k=0;k<4;k++) {
			int r=rd.nextInt()%4;
			if(r<0) {
				r=r*-1;
			}
			while(a[r]==true) {
				r=(r+1)%4;
				if(r<0) {
					r=r*-1;
				}
			}
			a[r]=true;
			if(r==0) {
				mazemake(maze,vis,i+1,j,i,j,n);
			}else if(r==1) {
				mazemake(maze,vis,i,j+1,i,j,n);
			}else if(r==2) {
				mazemake(maze,vis,i-1,j,i,j,n);
			}else if(r==3) {
				mazemake(maze,vis,i,j-1,i,j,n);
			}
		}
	}
